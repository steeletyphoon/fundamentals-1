#!/usr/bin/env python3

"""The answers to all your questions."""

import skilstak.colors as c
import random
import os 
import json
import re

def ask(prompt):
    """Prompt the user to enter some text as a string.
    
    Args:
        prompt (str): Text to use as user prompt

    Returns: 
        str: Typed in text stipped of whitespace and lowercase

    """
    answer = input(prompt).strip().lower()
    return answer

def load_answers(path):
    """Loads answers from answers.json and from ascii.

    A random answer will be selected from the combination of all
    answers in the answers.json file and ever ``.txt`` file in the
    ascii directory. The JSON file should contain a list:

    [
      "Yes.",
      "No.",
      "Maybe."
    ]
    
    Since JSON does not handle line returned very well ASCII art
    can be put into .txt files inside the ascii directory and each
    will be loaded into its own possible answer.

    Two special files will be displayed to start and end the program:
    ascii/welcome.txt and ascii/bye.txt

    Args:
        path (str): Full path to the directory with 'answers.json'
        and 'ascii' dir.

    Returns: 
        list: A list of all possible answers.

    """

    data = path + "/answers.json"
    txt = path + "/ascii"
    answers = []
    with open(data) as f:
        answers = json.load(f);
    for name in os.listdir(txt):
        if name.endswith(".txt") and not (name == "welcome.txt" or name == "bye.txt"):
            with open(txt + "/" + name) as f:
                one = f.read()
                answers.append(one)
    return answers

def load_responses(path):
    """Loads special response from responses.json and ascii/responses.

    Special responses, (sometimes called 'Easter eggs'), are a way
    to give your Eightball some color. Each list entry is itself a
    list with two parts, a regular expression to match to what the
    player typed in and a special response to say. The simplest
    regular expression is simply a string of text, a keyword to
    look for (ex: "love") or a few keywords (ex: "die|death"). For
    example:

    [
      ["love", "Sorry I'm not able to respond to matters of love."],
      ["death|die", "death.txt"]
    ]

    If the special response ends with 'txt' the response is assumed
    to be the name of a text file in <path>/ascii/responses/ and will
    be loaded as the special response.

    Args:
        path (str): Full path to dir with 'responses.json' and
                    'ascii/responses' dir.

    Returns: 
        list: A list of all special responses.

    """

    data = path + "/responses.json"
    txt = path + "/ascii/responses"
    responses = []
    with open(data) as f:
        responses = json.load(f);
    for r in responses:
        regx = r[0]
        special = r[1]
        if special.endswith(".txt"):
            fname = txt + "/" + special
            with open(fname) as s:
                buf = s.read()
                r[1] = buf
    return responses

def has_special_response(question,responses):
    """See if question matches the any of the special response questions.

    Args:
        question (str): The question to match against possible special responses.
        responses (list): A list of responses, each as a two-part list.

    Returns:
        bool/str: The special response if one is found.

    """

    for r in responses:
        regx = r[0]
        if re.search(regx,question):
            return r[1]

def welcome(data):
    """Display a welcome message.

    Looks for <data>ascii/welcome.txt and if found will use it
    to display a welcome message when eightball starts. Otherwise,
    it prints the following by default:

        Welcome to the Magic Eightball
        Enter your question below:

    Args:
        data (str): Full path to the dir containing 'ascii/'.
    """

    txt = data + "/ascii/welcome.txt"
    if os.path.isfile(txt):
        with open(txt) as f:
            welcome_message = f.read()
    if not welcome_message:
        welcome_message = """
Welcome to the Magic Eightball
Enter your question below:
"""
    print(c.clear + c.rc() + welcome_message + c.reset)

def bye(data):
    goodbye = "Goodbye. Come back soon!"
    txt = data + "/ascii/bye.txt"
    if os.path.isfile(txt):
        with open(txt) as f:
            goodbye = f.read()
    print(goodbye)
    exit()

def answer_question(answers,responses,data):
    """Prompt for a single question and answer it."""
    question = ask("--> " + c.b3)
    print(c.reset, end='')
    if question == 'bye' or question == 'goodbye':
        bye(data)
    special = has_special_response(question,responses)
    if special:
        answer = special
    else:
        answer = random.choice(answers)
    print(c.random() + answer + c.x)

def eightball(answers,responses,data):
    """Main eightball loop. Ask and answer questions, forever."""
    try:
        while True:
            answer_question(answers,responses,data)
    except KeyboardInterrupt:
        print()
        bye(data)

if __name__ == '__main__':
    data = os.environ["FUNDATA"] + "/eightball"
    welcome(data)
    answers = load_answers(data)
    responses = load_responses(data)
    eightball(answers,responses,data)

